# Feature Configuration
# Each line consists 4 fields Name;Type;Transform;Parameter, seperated by `;`
# For used features, all of 4 fields is required.
# 1. Name: feature name, must in input feature schema
# 2. Type: feature type,  'category' or 'continuous'.
# 3. Transform: determine feature transform in tensorflow
#    if Type == 'category', then Transform is one of {'hash_bucket', 'vocab', 'identity'}
#       Transform == 'hash_bucket'  ==> tf.feature.categorical_column_with_hash_bucket
#       Transform == 'vocab'        ==> tf.feature.categorical_column_with_vocabulary_list
#       Transform == 'identity'     ==> tf. feature.categorical_column_with_identity
#    if Type == 'continuous', then Transform is one of {'numeric', 'bucket'}
#       Transform == 'numeric'      ==> tf.feature_column.numeric_column
#       Transform == 'discretize'   ==> tf.feature_column.bucketized_column
# 4. Parameter: differ from the transform, see details in tf.feature_column
# For unused features, put symbol `#` ahead of the line, only Name is required.
# Set continuous feature transform 'discretize' to add bucketized continuous feature to wide columns

# Note: if category size=1000, how much should hash_bucket_size be ?
# larger require more space and complexity, but smaller cause more collision
# here, i use the strategy that for low sparsity category, set 3-5times hash_bucket_size to reduce collision
# for high sparsity category, set 1 times hash_bucket_size.

#Request_id;category;hash_bucket;500000
#account_id;category;hash_bucket;1000
adplan_id;category;hash_bucket;10000
scheduling_id;category;hash_bucket;10000
#position_id;category;hash_bucket;10000
idea_id;category;hash_bucket;20000
cost_type;category;vocab;0,1
province_id;category;hash_bucket;100
city_id;category;hash_bucket;1000
ip_original;category;hash_bucket;500000
os;category;vocab;0,1,2,3,4,5
device_type;category;vocab;0,1,2
client_type;category;vocab;a,w
galaxy_id;category;hash_bucket;10000000
network;category;vocab;0,1,2,3,4
app_version;category;hash_bucket;100
idea_type;category;identity;15
#tag;category;vocab;0,1
industry_level1_id;category;identity;18
industry_level2_id;category;identity;152
category;category;hash_bucket;500
location;category;vocab;1,2,3,4,5,6,7,8,9,20,21,22,23,24,25,26,27,28,29,50,51,52,53,54,60,101,102,200,201,202,301,302,303,304,1001,1002,2001,2002,3001,3002,4001,4002,5001,5002,6001,6002,7001,7002,8001,8002,9001,10001,10002,11001,11002
isweekend;category;vocab;0,1
weekdays;category;vocab;1,2,3,4,5,6,7
#year;category;vocab;0
month;category;vocab;01,02,03,04,05,06,07,08,09,10,11,12
day;category;vocab;01,02,03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
hour;category;vocab;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
#dt;category;vocab;0
#host_name;category;hash_bucket;30
#request_tm;category;hash_bucket;1000
#log_version;category;vocab;1
#pay;continuous;discretize;100000,200000,300000,500000,1000000,1500000
#ecpm;continuous;discretize;50000,100000,200000,500000,1000000,2000000,5000000,10000000
#ecpm2;continuous;discretize;50000,100000,200000,500000,1000000,2000000,5000000,10000000
#winprc;continuous;discretize;500,1000,2000,5000,10000,50000,100000,150000,200000,250000,300000,350000,400000,500000
#ctr;continuous;discretize;10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,110000,120000,130000,140000,150000,160000,170000,180000,190000,200000,210000,220000,230000
#rpid;category;vocab;0
u;category;hash_bucket;10000000
#market;category;vocab;0,1
site;category;vocab;1,2,3,4,5,6,8,9,10,11
status;category;vocab;0,1,2,3
is_cache;category;vocab;0,1
ctr_strategy_type;category;hash_bucket;100
is_pasv_flush;category;vocab;0,1
isp;category;vocab;1,2,3,4
#combine_id;category;hash_bucket;220000
device_model;category;hash_bucket;10000
article_tag;category;hash_bucket;500
longitude;continuous;discretize;90,95,100,105,110,115,120,125,130
latitude;continuous;discretize;20,25,30,35,40,45,50
user_cates;category;hash_bucket;1000
user_industrys;category;hash_bucket;1000
ad_cates;category;hash_bucket;1000
ad_idea_types;category;hash_bucket;100
age;continuous;discretize;15,20,25,30,35,40,45,50,55,60,65
ugender;category;vocab;male,female
ucomp;category;hash_bucket;1000
rk_age_range;category;vocab;6-10,11-15,16-20,21-25,26-30,31-35,36-40,41-45,46-50,51-55,56-60
rk_hour;category;vocab;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23
