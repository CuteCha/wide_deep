# Cross Feature Configuration
# Each line consists 3 fields `Names`; `Hash_bucket_size`; `Is_deep`  seperated by `;`
# Crossed features will be hashed according to hash_bucket_size, which recommanded value
# to be production of each cross feature dictinct value count.
# For example, cross feature {age, gender}, age has N values, gender has 2 values, then
# hash_bucket_size can be set about N*2,
# 1. names: cross feature names at least 2, sepeated by `,`
# 2. hash_bucket_size: if no speicify, defaults to 10K, use `k` as a thousand
# 3. is_deep: `0` or `1`, if no speicify, defaults to `1`
#             which means embedding the cross feature for deep input, set `0` for only wide part.
# For unused features, just put symbol '#' ahead of the line

# Names;Hash_buket_size;Is_deep
adplan_id,category;20k;
category,ucomp;;
scheduling_id,ucomp;;
category,location,site;;
age,ugender;;
scheduling_id,age;;
site,age,ugender;;
industry_level2_id,age,ugender;;
scheduling_id,age,ugender;;
industry_level2_id,ucomp;;
adplan_id,ucomp;;
adplan_id,category,ucomp;;
category,scheduling_id;;
category,industry_level2_id;;
category,network,os;;
hour,weekdays;;
hour,scheduling_id;;
hour,industry_level2_id;;
network,os,site;;
industry_level2_id,site;;
adplan_id,os,site;;
industry_level2_id,network,os;;
network,os,scheduling_id;;
#industry_level2_id,user_industrys;;
industry_level2_id,ip_original;;
city_id,industry_level2_id;;
